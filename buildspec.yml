version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: "010438506754"
    AWS_REGION: "us-east-1"
    ECR_REPOSITORY: "test/frontend"
    EKS_CLUSTER_NAME: "my-cluster"
    K8S_NAMESPACE: "my-app"

phases:
  install:
    commands:
      - echo Installing pip
      - curl -O https://bootstrap.pypa.io/get-pip.py
      - python3 get-pip.py
      - echo Installing AWS CLI using pip
      - pip install awscli
      - echo AWS CLI installed successfully
      - echo Installing kubectl
      - curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - echo kubectl installed successfully
  pre_build:
    commands:
      - echo Logging in to Amazon ECR
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
  build:
    commands:
      - echo Building the Docker image
      - docker build -t my-frontend ./front-end
      - echo Tagging the Docker image
      - docker tag my-frontend:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest
      - echo Pushing the Docker image
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest
  post_build:
    commands:
      - echo Updating Kubernetes deployment
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
      - kubectl set image deployment/frontend frontend=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest --namespace $K8S_NAMESPACE
      - kubectl rollout status deployment/frontend --namespace $K8S_NAMESPACE

artifacts:
  files:
    - '**/*'  # Specify files or directories to include in the artifacts
